apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war' 
apply plugin: 'jetty'
//apply plugin: 'pmd'


sourceCompatibility = 1.8
version = '1.0'

group = 'com.creationmachine'
version = '1.0.0'


description = "gradleExample"


sourceCompatibility = 1.8
targetCompatibility = 1.8


jar {
    manifest {
        attributes 'Implementation-Title': 'Gradel Example 02',
                   'Implementation-Version': version
    }
}


war {
    archiveName 'gradleExample.war'
}


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.2.6.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-tx', version: '4.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version: '4.1.7.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.0.2.RELEASE'
    compile group: 'org.hibernate', name: 'hibernate-core', version:'4.3.11.Final'
    compile group: 'javax.validation', name: 'validation-api', version:'1.1.0.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version:'5.2.1.Final'
    compile group: 'com.h2database', name: 'h2', version:'1.4.189'
    compile group: 'joda-time', name: 'joda-time', version:'2.8.2'
    compile group: 'org.jadira.usertype', name: 'usertype.core', version:'3.1.0.CR11'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    compile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version:'2.3.1'
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.1.7.RELEASE'
    testCompile group: 'org.testng', name: 'testng', version:'6.9.6'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.10.19'
    testCompile group: 'com.h2database', name: 'h2', version:'1.4.189'
    testCompile group: 'org.dbunit', name: 'dbunit', version:'2.5.1'
}

jettyRunWar.contextPath = ''

jettyRunWar.stopPort = 8090
jettyRunWar.stopKey = 'stopKey'
jettyStop.stopPort = 8090
jettyStop.stopKey = 'stopKey'
jettyRun.stopPort = 8090
jettyRun.stopKey = 'stopKey'



task deploy (dependsOn: war){
    copy {
        from "build/libs"
        into "${System.env.CATALINA_HOME}/webapps"
        include "*.war"
    }
}

test {
  // enable TestNG support (default is JUnit)
  useTestNG()

  // show standard out and standard error of the test JVM(s) on the console
  testLogging.showStandardStreams = true

  minHeapSize = "128m"
  maxHeapSize = "512m"

  jvmArgs '-XX:MaxPermSize=256m'

  // listen to events in the test execution lifecycle
  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  // listen to standard out and standard error of the test JVM(s)
  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
}


